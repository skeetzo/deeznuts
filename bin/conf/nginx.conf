# Nginx config

user www-data;

worker_processes auto;

##
# Logging Settings
##
error_log  /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    # multi_accept on;
}

##
# HTTP
##
http {
    resolver 127.0.0.1;

    ##
    # Basic Settings
    ##
    # limit_req_zone $limit_key zone=req_zone:10m rate=5r/s;
    # limit_req_zone $binary_remote_addr zone=req_zone_wl:10m rate=15r/s;
    # geoip_country /etc/nginx/geoip/GeoIP.dat; # the country IP database
    # geoip_city /etc/nginx/geoip/GeoLiteCity.dat; # the city IP database
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    #aio on;
    directio 512;
    #keepalive_timeout 65;
    send_timeout 20;
    #proxy_buffering off;
    #proxy_buffer_size 8k;
    #proxy_buffers 2048 8k;
    types_hash_max_size 2048;
    server_tokens off;
    server_names_hash_bucket_size 64;
    server_name_in_redirect off;
    client_max_body_size 10000M;        
    # proxy_cache_path /tmp/NGINX_cache/ keys_zone=backcache:10m;

    include mime.types;
    default_type application/octet-stream;
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for" "$upstream_cache_status"';

    access_log /var/log/nginx/access.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 8080;
        server_name localhost;

        location /hls {
            # Disable cache
            add_header Cache-Control no-cache;

            include cors_support;

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /tmp;
        }

        location /dash {
            # Serve DASH fragments
            root /tmp;
            add_header Access-Control-Allow-Origin *;
        }
    }
    
    ##
    # Virtual Host Configs
    ##
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    server {

        listen 8080;

        # This URL provides RTMP statistics in XML
        location /stat {
            rtmp_stat all;

            # Use this stylesheet to view XML as web page
            # in browser
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            # XML stylesheet to view RTMP stats.
            # Copy stat.xsl wherever you want
            # and put the full directory path here
            root /path/to/stat.xsl/;
        }

        location /hls {
            # Serve HLS fragments
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
        }

        location /dash {
            # Serve DASH fragments
            root /tmp;
            add_header Cache-Control no-cache;
        }
    }
}

##
# RTMP
##
rtmp {

    server {
        listen 1935;
        chunk_size 4096;
        
        application live {
            live on;
            record off;
            # allow publish 127.0.0.1;
            # deny publish all;

            # watermark / cover and push to socials
            #exec_push ffmpeg -re -i rtmp://localhost/live/$name -i watermark.png -filter_complex "overlay=x=(main_w-overlay_w)/2:y=h-th" -f mp4 rtmp://localhost/socials/$name;
            # transcode?
            #exec_push ffmpeg -re -i rtmp://localhost/live/$name -c:v libx264 -preset superfast -maxrate 4000k -bufsize 8000k -g 120 -c:a aac -b:a 128k -ar 44100 -strict -2 -f flv rtmp://localhost/socials/$name live=1;

            allow play all;

            # push to deeznuts
            #push rtmp://127.0.0.1:8935/live/stream live=1;
        }

        application shower {
            live on;

            # push rtmp://127.0.0.1:8935/live/stream?sign=1553661963611-6426d2a5389fc1d24798406693633827;
            push rtmp://127.0.0.1:8935/live/stream;                
        }

        application socials {
            # everything sent here is pushed to external live streaming
            live on;
            
            # Facebook
            #push rtmp://live-api.facebook.com:80/1735495809863085?ds=1&s_vt=api&a=AThxuu-z0KCANS1k;

            # Twitch - cockthulhu
            #push rtmp://live-sjc.twitch.tv/app/live_103326489_lmasfklegL3QjcM7lFOZJMYiz1r2o0;

            # YouTube - Alex D. / JustAlexxxD
            #push rtmp://a.rtmp.youtube.com/live2/mggx-3qyv-qj26-3a0k;
        }

        # HLS
        # For HLS to work please create a directory in tmpfs (/tmp/hls here)
        # for the fragments. The directory contents is served via HTTP (see
        # http{} section in config)
        #
        # Incoming stream must be in H264/AAC. For iPhones use baseline H264
        # profile (see ffmpeg example).
        # This example creates RTMP stream from movie ready for HLS:
        #
        # ffmpeg -loglevel verbose -re -i movie.avi  -vcodec libx264
        #    -vprofile baseline -acodec libmp3lame -ar 44100 -ac 1
        #    -f flv rtmp://localhost:1935/hls/movie
        #
        # If you need to transcode live stream use 'exec' feature.
        #
        #application hls {
            #live on;
            #hls on;
            #hls_path /tmp/hls;
        #}

        # MPEG-DASH is similar to HLS

        #application dash {
            #live on;
            #dash on;
            #dash_path /tmp/dash;
        #}
    }
}

#mail {
#   # See sample authentication script at:
#   # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#   # auth_http localhost/auth.php;
#   # pop3_capabilities "TOP" "USER";
#   # imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#   server {
#       listen     localhost:110;
#       protocol   pop3;
#       proxy      on;
#   }
# 
#   server {
#       listen     localhost:143;
#       protocol   imap;
#       proxy      on;
#   }
#}
