# nginx config for Rasp Pi      #
# 9/14/2018 : Skeetzo           #
# 10/16/2018                    #
# 11/12/2018                    #
################################# 
# live -> watermark -> deeznuts #
#      -> censor -> socials     #
#################################

user root;
worker_processes  auto;

events {
    worker_connections  1024;
}

error_log /var/log/nginx/error.log debug;

rtmp {

    server {

        listen 1935;
        chunk_size 4000;
        
       # exec_static /usr/bin/ffmpeg -re -i udp://10.5.5.100:8554 -c copy -f flv rtmp://127.0.0.1/socials;

        exec_push rtmp://127.0.0.1:8935/$name;

    	application shower {
    	    live off;
            record all;
    	    record_path /tmp/rec;

            # watermark and send it to socials
            # exec_static /usr/bin/ffmpeg -re -i rtmp://127.0.0.1/$name -c copy -f flv rtmp://127.0.0.1/socials;
    	}

        application socials {
            # everything sent here is pushed to external live streaming with a censor bar w/ link to actual content
            live on;
            record off;

            # Facebook
            #push rtmp://live-api.facebook.com:80/1735495809863085?ds=1&s_vt=api&a=AThxuu-z0KCANS1k;

            # Twitch
              # cockthulhu
            #push rtmp://live-sjc.twitch.tv/app/live_103326489_lmasfklegL3QjcM7lFOZJMYiz1r2o0;

            # YouTube
              # Alex D. / JustAlexxxD
            #push rtmp://a.rtmp.youtube.com/live2/mggx-3qyv-qj26-3a0k;
        }
    }
}

# HTTP can be used for accessing RTMP stats
http {

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # server {
        # listen 80;
        # listen [::]:80;
        
        # server_name localhost.com alexdeeznuts.com www.alexdeeznuts.com alexdeeznutz.com www.alexdeeznutz.com;
        # return 301 https://$server_name$request_uri;
    # }

    # server {
    #    listen 443 ssl http2;

    #    server_name www.alexdeeznuts.com www.alexdeeznutz.com;
    #     # redirects www to non-www. wasn't work for me without this server block
    #    return 301 $scheme://alexdeeznuts.com$request_uri;
    # }

    server {
        # HTTP
        listen 80;
        # listen [::]:80;
        ## SSL settings
        # listen 443 ssl http2;
        # listen [::]:443 ssl http2;
        server_name localhost.com;

        root /var/www/apps/deeznuts;

        # ssl_certificate /etc/letsencrypt/live/alexdeeznuts.com-0001/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/alexdeeznuts.com-0001/privkey.pem;
        # ssl_trusted_certificate /etc/letsencrypt/live/alexdeeznuts.com-0001/chain.pem;

        # include /etc/letsencrypt/options-ssl-nginx.conf;
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        # ssl on;

        # Logging Settings
        access_log /var/log/nginx/deeznuts-access.log;
        error_log /var/log/nginx/deeznuts-error.log;

        # General Site Paths
        # Browser and robot always look for these
        # Turn off logging for them
        location = /favicon.ico { log_not_found off; access_log off; }
        location = /robots.txt  { log_not_found off; access_log off; }

        ##
        # Static files
        ##
        location ~* .(jpg|jpeg|png|gif|ico|css|js|mp4)$ {
            expires 365d;
        }
        location ~ ^/(images/|img/|javascript/|js/|css/|stylesheets/|flash/|media/|static/|robots.txt|humans.txt|favicon.ico) {
            access_log off;
            expires max;
        }

        # LetsEncrypt
        # location ^~ /.well-known/acme-challenge/ {
            # default_type "text/plain";
            # root /var/www/letsencrypt;
        # }

        location / {
            try_files $uri @deeznuts;
        }

        # location /on_connect {
        #     proxy_pass https://deeznuts;
        #     return 200;
        # }

        location @deeznuts {
            proxy_pass https://deeznuts;

            # limit_req zone=req_zone burst=20 nodelay;
            # limit_req zone=req_zone_wl burst=40 nodelay;
            # limit_req_log_level warn;

            proxy_set_header Host $http_host;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            proxy_redirect off;

            # ws?
            #proxy_set_header Upgrade $http_upgrade;
            #proxy_set_header Connection 'upgrade';
            #proxy_cache_bypass $http_upgrade;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    # deeznuts app
    upstream deeznuts {
        server 127.0.0.1:3000;
        keepalive 8;
    }
}

